{"version":3,"sources":["Components/MovieThumbnail.js","Components/SortButton.js","Components/SortMovies.js","Components/MoviesGallery.js","Components/Paginator-generic.js","constants.js","utils.js","Pages/Movies.js","carosale/Carosale.js","Pages/Homepage.js","Pages/Actors.js","Pages/DetailsPage.js","Components/SearchBox.js","Components/Navbar-main.js","Pages/Searchpage.js","Pages/AdvancedSearch.js","App.js","reportWebVitals.js","index.js"],"names":["MovieThumbnail","props","yearMovie","Date","this","releaseDate","getFullYear","className","CardDeck","Card","to","movieId","Img","variant","src","poster_path","alt","title","rate","React","Component","SortButton","Button","type","onClick","sortBy","active","isActive","SortMovies","sortByRating","setState","buttonActive","sortByValue","sortByYear","state","id","MoviesGallery","movieCards","moviesList","map","movie","checkPoster","includes","Col","popularity","Container","Row","galleryTitle","showSort","Paginator","goToSelectedPage","pageNum","setCurrentPage","parseInt","goToPreviousPage","current","currentPage","goToNextPage","totalPages","goToFirstPage","goToLastPage","createPaginatorNums","numsArr","count","pageToTest","push","pagination","disableIfFirst","disableIfLast","Pagination","Item","First","Prev","Next","Last","API_KEY","TMDBDiscover","params","queries","key","page","fetch","then","res","json","console","log","TMDBsearch","maxPages","promiseArr","i","Promise","all","jsonObjects","allMovies","length","results","flat","TMDBDetails","a","video","tmdbStream","tmdbDetails","tmdbVideo","ImdbId","imdb_id","omdbInfo","omdbDetails","language","spoken_languages","item","english_name","rating","Ratings","Source","Value","trailer","filter","toUpperCase","original_title","year","Year","runTime","runtime","plot","Plot","tagLine","tagline","genre","Genre","director","Director","backdrop_path","TMDBCast","tmdbInfo","tmdbActors","cast","Movies","val","sortValue","choosePage","sortTitle","sortByDefault","sort_by","listOfMovies","pages","total_pages","moviesObj","laguage","original_language","overview","release_date","vote_average","with_runtime","createMoviesObj","componentDidMount","showPaginator","Carosale","carouselArr","shuffledMovies","sort","b","Math","random","newCarouselArr","element","Carousel","interval","Caption","HomePage","Actors","actor","class","style","profile_path","name","known_for_department","href","DetailsPage","currentMovie","isLoading","currentMovieID","match","movieStream","castStream","newMovieID","Image","videoId","width","Body","Title","Subtitle","Text","withRouter","SearchBox","chooseMovie","window","location","searchText","updateText","event","target","value","allMoviesResults","movieArray","openSearchPage","searchResults","obj","dataItem","index","ListGroup","action","onChange","Form","Control","placeholder","MainNavbar","goToSearchPage","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","SearchPage","text","searchResultsCards","borderRadius","AdvancedSearch","moviesArr","Group","as","controlId","defaultValue","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.989b2d8b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardDeck } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass MovieThumbnail extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n       \r\n    }\r\n\r\n        render(){\r\n      \r\n            const yearMovie = (new Date(this.props.releaseDate)).getFullYear();\r\n          \r\n                return(\r\n                    <div className='p-movies-page'>\r\n                        <CardDeck>\r\n                       <Card className=\"card-design text-center\"  >\r\n                            <Link to={`/movies/${this.props.movieId}`}>\r\n                            <Card.Img variant=\"top\" src={this.props.poster_path } alt={this.props.title}/>  \r\n                            <div className=\"card-img-overlay\">     \r\n                                <div className=\"position-badge\">            \r\n                                <div className=\"badge badge-light badge-right\">{yearMovie}</div>\r\n                                <div className=\"badge badge-light badge-left\"><i className=\"fas fa-star color-star pr-1\"></i>{this.props.rate}</div>\r\n                                </div>  \r\n                                </div>\r\n                            </Link> \r\n                            <h5 className=\"min-height p-1\">{this.props.title}</h5>  \r\n                            {/* <div> popularity:{this.props.popularity}</div> */}\r\n                            \r\n                          \r\n                    </Card>\r\n                    </CardDeck>\r\n                    </div>\r\n                    )\r\n            }\r\n        }\r\nexport default MovieThumbnail;      ","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './SortMovies.css';\r\n\r\n\r\nclass SortButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n      \r\n    }\r\n\r\n    \r\n        render(){\r\n      \r\n                return(\r\n                        <Button type=\"button\" onClick={this.props.sortBy} variant=\"light\" active={this.props.isActive}>{this.props.title}</Button>\r\n                    )\r\n         }\r\n}\r\nexport default SortButton;      ","import React from 'react';\r\nimport SortButton from './SortButton';\r\nimport './SortMovies.css';\r\n\r\n\r\nclass SortMovies extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            buttonActive:2\r\n        }\r\n        \r\n    }\r\n   \r\nsortByRating=()=>{\r\n    const val='vote_average.desc';\r\n    this.setState({\r\n        buttonActive:2\r\n    });\r\n    this.props.sortByValue(val);\r\n}\r\nsortByYear=()=>{\r\n    const val='release_date.desc';\r\n    this.setState({\r\n        buttonActive:1\r\n    });\r\n  this.props.sortByValue(val);\r\n\r\n}\r\n        render(){\r\n      \r\n                return(\r\n                    <div className='c-sorting-movies'>\r\n                        <div id=\"btns\">\r\n                        <SortButton \r\n                            sortBy={this.sortByRating}\r\n                            isActive={this.state.buttonActive === '2' ? true : false}\r\n                            title=\"highest raiting\" />\r\n                            <SortButton \r\n                            sortBy={this.sortByYear}\r\n                            isActive={this.state.buttonActive ==='1' ? true : false}\r\n                            title=\"latest movies\" />\r\n                              \r\n                        </div>\r\n                    </div>\r\n                    )\r\n         }\r\n}\r\nexport default SortMovies;      ","import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport MovieThumbnail from './MovieThumbnail';\r\nimport './MovieThumbnail.css';\r\nimport SortMovies from './SortMovies';\r\n\r\nclass MoviesGallery extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n    \r\n    render(){\r\n        // console.log('Movies list'+this.props.moviesList);\r\n        // console.log('Total pages'+this.props.totalPages);\r\n        // console.log('Current page'+this.props.currentPage);\r\n\r\n        const movieCards =  this.props.moviesList.map((movie,id)=> {\r\n        const checkPoster = movie.poster_path.includes('null');\r\n            return ( \r\n             <Col className=\"py-2 col-6\" key={id}  >\r\n            <MovieThumbnail\r\n             movieId={movie.movieId}\r\n             poster_path={(!checkPoster) ? movie.poster_path : './No_image.png'}\r\n             rate={movie.rate}\r\n             title={movie.title}\r\n             popularity={movie.popularity}\r\n             releaseDate={movie.releaseDate}\r\n             />\r\n             </Col>\r\n        \r\n             )\r\n         })\r\n       \r\n        return(\r\n            <div >\r\n                 <Container>\r\n               <Row className=\"mx-0 text-center \">\r\n                   <Col>\r\n                   <h3 className=\"text-center my-3\">{this.props.galleryTitle}\r\n                   </h3>\r\n                   </Col>\r\n                </Row> \r\n                <Row className={this.props.showSort ?\"mx-0 mt-3 text-center\" : \"mx-0 mb-0 mt-3 text-center display-none\" }>\r\n                   <Col>\r\n                   <SortMovies sortByValue={this.props.sortByValue}/>\r\n                   </Col>\r\n                </Row> \r\n                <Row className=\"row-cols-lg-5 row-cols-md-4 row-cols-sm-2  mx-0 mb-4\">\r\n                 {movieCards}\r\n                </Row>\r\n                </Container>\r\n          </div>\r\n            )\r\n        }\r\n    }\r\n    export default MoviesGallery;  ","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport './components.css'\r\n\r\n// this component is a generic pagination comp that will get the following props:\r\n// 1. currentPage - the page that the user have chosen\r\n// 2. totalPages - the total number of pages for all movies display\r\n// 3. callBack function - setCurrentPage() to return the number of page that should be showen \r\nclass Paginator extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    //goToSelectedPage is a callback func that returns the selected page to the patrent\r\n    //setCurrentPage is located at the parent, get the selected page and changes the state of the current page\r\n    goToSelectedPage = (pageNum) => {\r\n        this.props.setCurrentPage(parseInt(pageNum))\r\n    }\r\n\r\n    goToPreviousPage = () => {\r\n        const current = this.props.currentPage;\r\n        if(current===1) {\r\n            return\r\n        }\r\n        else {\r\n            this.props.setCurrentPage(parseInt(current - 1))\r\n        }\r\n    }\r\n\r\n    goToNextPage = () => {\r\n        const current = this.props.currentPage;\r\n        if(current===this.props.totalPages){\r\n            return\r\n        }\r\n        else {\r\n            this.props.setCurrentPage(parseInt(this.props.currentPage + 1))\r\n        }\r\n    }\r\n\r\n    goToFirstPage = () => {\r\n        this.props.setCurrentPage(1)\r\n    }\r\n\r\n    goToLastPage = () => {\r\n        this.props.setCurrentPage(this.props.totalPages)\r\n    }\r\n\r\n    createPaginatorNums = () => {\r\n        const numsArr = [];\r\n        const currentPage = this.props.currentPage;\r\n        const totalPages = this.props.totalPages\r\n        let count = 0;\r\n        let pageToTest = (totalPages - currentPage > 0) ? currentPage - 1: currentPage - 2;\r\n        while(count < 3 && pageToTest <= totalPages){\r\n            if(pageToTest > 0) {\r\n                count++;\r\n                numsArr.push(pageToTest);\r\n            }\r\n            pageToTest++;\r\n        }\r\n        return numsArr;\r\n    }\r\n\r\n    render() {\r\n        const disableIfFirst = this.props.currentPage === 1 ? 'disabled' : '';\r\n        const disableIfLast = this.props.currentPage === this.props.totalPages ? 'disabled' : '';\r\n        let pagination = [];\r\n        const pageNumsArr = this.createPaginatorNums();\r\n            pagination = pageNumsArr.map(pageNum => {\r\n                return (\r\n                    <Pagination.Item \r\n                        key={pageNum}\r\n                        className={`${(pageNum === this.props.currentPage ? 'active' : '')}`}\r\n                        onClick={() => this.goToSelectedPage(pageNum)}>\r\n                            {pageNum}\r\n                    </Pagination.Item>\r\n                )\r\n            })\r\n        return (\r\n            <Pagination className=\"justify-content-center\">\r\n                <Pagination.First \r\n                    onClick={this.goToFirstPage}\r\n                    className={disableIfFirst}/>\r\n                <Pagination.Prev\r\n                    onClick={this.goToPreviousPage}\r\n                    className={disableIfFirst} />\r\n\r\n                        {pagination}\r\n\r\n                <Pagination.Next\r\n                    onClick={this.goToNextPage}\r\n                    className={disableIfLast}/>\r\n                <Pagination.Last \r\n                    onClick={this.goToLastPage}\r\n                    className={disableIfLast}/>\r\n            </Pagination>\r\n        )\r\n    }\r\n  \r\n}\r\n\r\nexport default Paginator;","//company : 2 - disney pixer\r\n//company : 5391 - disney classic\r\nexport const DISNEY_ID = 6125;\r\nexport const API_KEY = 'e23d4bbe9541db53d2d48b97b8c30b05';","import { API_KEY, DISNEY_ID } from './constants';\r\n\r\nexport const TMDBDiscover = (params) => {\r\n    // Params will be a {key: value} where the key is the api key\r\n    // i.e {with_actor}\r\n    let queries = '';\r\n    if(!params.page) {\r\n        params.page = 1;\r\n    }\r\n    for(let key in params) {\r\n        queries += '&' + key + '=' + params[key]\r\n    }\r\n    return fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&include_adult=false&include_video=true&with_companies=${DISNEY_ID}${queries}`)\r\n    .then((res) => res.json());\r\n    \r\n}\r\nconsole.log(TMDBDiscover)\r\nexport const TMDBsearch = (maxPages) => {\r\n    let promiseArr= [];\r\n    // let pages = maxPages - 1;\r\n    for (let i = 1; i <= maxPages; i++) {\r\n       promiseArr.push(  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&include_adult=false&include_video=true&with_companies=${DISNEY_ID}&page=${i}`)\r\n       .then(res=>  res.json()))\r\n    }\r\n\r\n    return  Promise.all(promiseArr)\r\n    .then((jsonObjects)=> {  \r\n        let allMovies = []; \r\n        // debugger\r\n        for (let i = 0; i < jsonObjects.length; i++) {\r\n           allMovies.push(jsonObjects[i].results)\r\n            \r\n        }\r\n\r\n        allMovies =  allMovies.flat();\r\n        //The flat() method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.\r\n\r\n        \r\n        /// in javascript - object\r\n\r\n        // const foundMovies = {};\r\n        // allMovies.filter(m => {\r\n        //     if(foundMovies[m.id]){\r\n        //         return false;\r\n        //     }\r\n        //     else{\r\n        //         foundMovies[m.id] = true;\r\n        //         return true;\r\n        //     }\r\n\r\n        // })\r\n\r\n        return allMovies;\r\n    });\r\n} \r\n\r\nexport const createMoviesObj = (listOfMovies) => {\r\n    const moviesObj= listOfMovies.results.map((movie)=>{\r\n                  //Recieves list of movies from fetch\r\n                  // return array of movies obj\r\n                  return{\r\n                      movieId: movie.id,\r\n                      title: movie.original_title,\r\n                      laguage: movie.original_language,\r\n                      overview: movie.overview,\r\n                      releaseDate: movie.release_date,\r\n                      rate:movie.vote_average,\r\n                      runTime:movie.with_runtime,\r\n                      total_pages:movie.total_pages,\r\n                      popularity:movie.popularity,\r\n                      poster_path: `https://www.themoviedb.org/t/p/w220_and_h330_face/${movie.poster_path}`,\r\n                        }\r\n  \r\n                  \r\n                   })\r\n                   return moviesObj;\r\n  }\r\n\r\n \r\nexport  const  TMDBDetails = async (id)=>{\r\n    let movie =  fetch (`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`);\r\n    let video =  fetch(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${API_KEY}&language=en-US`);\r\n   \r\n    const tmdbStream = await Promise.all([movie, video]);\r\n    const tmdbDetails = await tmdbStream[0].json();\r\n    const tmdbVideo = await tmdbStream[1].json();\r\n  \r\n    let ImdbId= tmdbDetails.imdb_id;\r\n    let omdbInfo= await fetch(`https://www.omdbapi.com/?apikey=de97b29a&i=${ImdbId}`)\r\n    const omdbDetails=await omdbInfo.json();\r\n    const language=tmdbDetails.spoken_languages ? tmdbDetails.spoken_languages.map(item=>item.english_name) : null\r\n    const rating= omdbDetails.Ratings ? omdbDetails.Ratings.map((rating)=>{\r\n        return  <ul className=\"rating-list\"><li>{rating.Source} : {rating.Value}</li></ul>\r\n        }) : null;\r\n\r\n    const trailer= (tmdbVideo && tmdbVideo.results)? tmdbVideo.results.filter((video) => {\r\n        return ((video[\"type\"]).toUpperCase() == \"TRAILER\") && !((video[\"name\"].toUpperCase()).includes(\"TEASER\"))\r\n    }): null \r\n\r\n        return { \r\n               title:tmdbDetails.original_title,\r\n                year: omdbDetails.Year,\r\n                rating: rating,\r\n                runTime:tmdbDetails.runtime,\r\n                plot:omdbDetails.Plot,\r\n                tagLine:tmdbDetails.tagline,\r\n                genre:omdbDetails.Genre,\r\n                director:omdbDetails.Director,\r\n                language:language,\r\n                poster_path: `https://themoviedb.org/t/p/w780${tmdbDetails.backdrop_path}`,\r\n                video: (trailer) ? trailer[0][\"key\"] : null,\r\n          \r\n      }\r\n    }\r\n\r\n\r\n\r\n    export const TMDBCast = async (id) =>{\r\n        let tmdbInfo= await fetch (`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\r\n        const tmdbActors = await tmdbInfo.json();\r\n        return tmdbActors.cast ? tmdbActors.cast:null  \r\n    }","import React from 'react';\r\nimport MoviesGallery from '../Components/MoviesGallery';\r\nimport '../Components/components.css';\r\nimport Paginator from '../Components/Paginator-generic';\r\nimport { createMoviesObj, TMDBDiscover } from '../utils';\r\n\r\n\r\nclass Movies extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            moviesList:[],\r\n            totalPages:1,\r\n            currentPage:1,\r\n            sortValue:'vote_average.desc'\r\n\r\n        }\r\n    }\r\n    sortByValue=(val)=>{\r\n    \r\n        this.setState({\r\n            sortValue:val\r\n            },()=>{this.choosePage(this.state.currentPage)})\r\n            \r\n    }\r\n\r\n    setCurrentPage = (pageNum) =>{\r\n       \r\n        this.setState({\r\n            currentPage:pageNum\r\n        })\r\n        this.choosePage(pageNum);\r\n\r\n    }\r\n\r\n    choosePage = (pageNum) => {\r\n       \r\n        const sortTitle=(this.props.sortByDefault) ? this.props.sortByDefault : this.state.sortValue;\r\n        TMDBDiscover({sort_by:sortTitle,page:pageNum})\r\n        .then((listOfMovies)=>{\r\n            if( listOfMovies && listOfMovies.results){\r\n            const pages=listOfMovies.total_pages;\r\n            const moviesObj = createMoviesObj(listOfMovies);\r\n            \r\n                    this.setState({\r\n                            moviesList:moviesObj,\r\n                            totalPages:pages\r\n                            })\r\n                 }\r\n                   \r\n            })\r\n    }\r\n   \r\n    componentDidMount = () =>{\r\n        this.choosePage(this.state.currentPage);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n  console.log(this.props.showPaginator);\r\n        // const checkSort=this.state.mSorted.map((movie,id)=> {\r\n        //     return movie.rate;\r\n        //  })\r\n        //  console.log('check sort by year'+ checkSort)\r\n        return (\r\n            <div >\r\n                <MoviesGallery \r\n                galleryTitle={this.props.galleryTitle}\r\n                moviesList={this.state.moviesList}\r\n                sortByValue={this.sortByValue}\r\n                showSort={this.props.showSort}\r\n                 />\r\n                 <div className={this.props.showPaginator? '' : 'display-none'}>\r\n                <Paginator \r\n                showPaginator={this.props.showPaginator}\r\n                totalPages={this.state.totalPages} \r\n                currentPage={this.state.currentPage}\r\n                setCurrentPage={this.setCurrentPage}\r\n                /></div>\r\n            </div>\r\n        )\r\n    }\r\n  \r\n}\r\n\r\nexport default Movies;","import React, { Component } from 'react';\r\nimport { Carousel} from 'react-bootstrap';\r\nimport { TMDBDiscover } from '../utils';\r\nimport './carosale.css';\r\n\r\n\r\n\r\nexport default class Carosale extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      carouselArr:[]\r\n    }\r\n  }\r\ncomponentDidMount = () =>{\r\n   TMDBDiscover({page: 0, sort_by:\"popularity.desc\"})\r\n   .then((res)=>{this.setState({carouselArr:res.results})})\r\n   \r\n   }\r\n    render() {\r\n      \r\n      const shuffledMovies = this.state.carouselArr.sort( (a, b) => {\r\n        return Math.random() - 0.5\r\n        } )\r\n         let newCarouselArr=[]\r\n         if(this.state.carouselArr.length>0){\r\n          for (let i = 5; i > 0; i--) {\r\n             const element = shuffledMovies[i]\r\n                 {\r\n             newCarouselArr.push(\r\n             <Carousel.Item interval={3500}>\r\n              <img\r\n              className=\"d-block w-100\"\r\n              src={`https://themoviedb.org/t/p/w1280/${element.backdrop_path}`}\r\n              alt=\"First slide\"\r\n              />\r\n\r\n               <Carousel.Caption>\r\n               <h1 className=\"movie-year mt-4\">{(new Date(element.release_date)).getFullYear()}</h1> \r\n\r\n               <h3 className=\"movie-title\">{element.original_title}</h3>\r\n              \r\n               </Carousel.Caption>\r\n               </Carousel.Item>\r\n             )\r\n        \r\n      }}}\r\n        return (    <Carousel className=\"mt-3 slider-design\">\r\n                    {newCarouselArr} \r\n                    </Carousel>        ) \r\n\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {NavLink, Switch} from \"react-router-dom\";\r\nimport { Route } from 'react-router';\r\nimport {TMDBDiscover, useTMDBDiscover} from '../utils'; \r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport './Homepage.css';\r\nimport Movies from './Movies';\r\nimport { Link } from 'react-router-dom';\r\nimport Carosale from '../carosale/Carosale';\r\n\r\n\r\nclass HomePage extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            moviesList:[],\r\n            totalPages:1,\r\n            currentPage:1\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                  <Container className=\"bg\">\r\n                     <Row> \r\n                    <Carosale/>\r\n                         </Row> \r\n                   \r\n                    <Movies \r\n                        showPaginator={false}\r\n                        showSort={true}\r\n                        galleryTitle=''\r\n                    />\r\n               </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage; ","import React from 'react';\r\nimport '../Components/components.css';\r\n\r\nclass Actors extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n  \r\n    render(){\r\n\r\n        const cast = this.props.cast.map((actor)=>{\r\n            return <div class=\"card\" style=\"width: 18rem;\">\r\n                      <img class=\"card-img-top\" src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${actor.profile_path}`} alt=\"Card image cap\"/>\r\n                      <div class=\"card-body\">\r\n                          <h5 class=\"card-title\">{this.actor.name}</h5>\r\n                          <p class=\"card-text\">{this.props.known_for_department}</p>\r\n                          <a href=\"#\" class=\"btn btn-primary\">More Movies</a>\r\n                      </div>\r\n                  </div>\r\n        })\r\n        \r\n        return(\r\n                <div>\r\n              {cast}\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Actors \r\n","import React, { Component } from 'react'\r\nimport {  Tabs,Tab, Container, Row, Col, Image, Card } from 'react-bootstrap'\r\nimport { withRouter } from 'react-router';\r\nimport { TMDBCast, TMDBDetails, TMDBDiscover,} from '../utils';\r\nimport YouTube from 'react-youtube';\r\nimport Actors from './Actors';\r\n\r\n class DetailsPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n       \r\n        this.state={\r\n            currentMovie:{},\r\n            isLoading:true,\r\n            movieId:0,\r\n            cast:{}\r\n\r\n        }\r\n   \r\n    }\r\n\r\n    \r\n componentDidMount(){\r\n \r\n\r\n    let currentMovieID =this.props.match.params.movieId; \r\n \r\n        TMDBDetails(currentMovieID).then((movieStream) =>{\r\n            TMDBCast(currentMovieID).then((castStream) =>{\r\n\r\n                    this.setState({\r\n                            currentMovie:movieStream,\r\n                            movieId: currentMovieID,\r\n                            cast:castStream\r\n                    })\r\n })\r\n\r\n            }\r\n          \r\n                    \r\n   \r\n          )\r\n     \r\n        }\r\n   //ACTORS MOVIES- ON CLICK- MORE MOVIES\r\n     componentDidUpdate(){\r\n \r\n        if (this.props.match.params.movieId != this.state.movieId){\r\n            \r\n            let newMovieID =this.props.match.params.movieId; \r\n     \r\n            TMDBDetails(newMovieID).then((movieStream) =>{\r\n                TMDBCast(newMovieID).then((castStream) =>{\r\n              \r\n                         this.setState({\r\n                             currentMovie:movieStream,\r\n                             movieId:newMovieID,\r\n                             cast:castStream\r\n                            })\r\n                        })\r\n                     })\r\n                     \r\n           }\r\n              \r\n      }\r\n   \r\n         \r\n    render() {\r\n        const video= (this.state.currentMovie.video===null)?\r\n        <Image className=\"no-video-img\" src=\"https://thumbs.dreamstime.com/z/print-177190284.jpg\"/>\r\n        : <YouTube videoId={this.state.currentMovie.video}/>;\r\n        return (\r\n                <div className=\"detailsPage\">\r\n                    <div className=\"tagLine\"> \r\n                        {this.state.currentMovie.tagLine}\r\n                     </div>\r\n\r\n                     <div className=\"upper-info\">\r\n                            <Image className=\"movie-img\" src={this.state.currentMovie.poster_path}></Image>\r\n                            <Card style={{ width: '30rem' }}>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{this.state.currentMovie.title}</Card.Title>\r\n                                        <Card.Subtitle className=\"mb-2 text-muted\">{this.state.currentMovie.plot}</Card.Subtitle>\r\n                                        <Card.Text> <span>Relesed Year:</span> {this.state.currentMovie.year}</Card.Text>\r\n                                        <Card.Text> <span>Run time:</span> {this.state.currentMovie.runTime} minuts </Card.Text>\r\n                                        <Card.Text> <span>Rated</span> {this.state.currentMovie.rating} </Card.Text>\r\n                                        <Card.Text> <span>Directed by:</span> {this.state.currentMovie.director}</Card.Text>\r\n                                        <Card.Text> <span>Genres: </span>{this.state.currentMovie.genre}</Card.Text>\r\n                                        <Card.Text> <span>Languages:</span> {this.state.currentMovie.language}</Card.Text>\r\n                                    </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                            <div className=\"down-info\">\r\n                            {/* style={{ width: '30rem' }} */}\r\n                            {/* <Card className=\"pl\">\r\n                                <Card.Body>\r\n                                        <Card.Title>{this.state.currentMovie.plot}</Card.Title>\r\n                                </Card.Body>\r\n                            </Card> */}\r\n                        <div class=\"video-info\">\r\n                              {video}\r\n                        </div>\r\n                </div>\r\n                <div className=\"movie-actor\">\r\n\r\n                    <Actors\r\n                    cast={this.state.cast}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(DetailsPage)\r\n","\r\n// import { Card, ListGroup, Button, Form } from 'bootstrap-react';\r\nimport React from 'react';\r\nimport { Card, ListGroup, Button, Form  } from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { TMDBDiscover, TMDBsearch } from '../utils';\r\n\r\n\r\n\r\nclass SearchBox extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            searchText:'',\r\n            movieArray: [],\r\n        };\r\n    }\r\n    \r\n\r\n \r\n    chooseMovie = (id) => {\r\n        \r\n        window.location.href = `/#/movies/${id}`\r\n        this.setState({\r\n            searchText:'',\r\n        })\r\n    }\r\n\r\n    updateText = (event) =>{\r\n        const val = event.target.value;\r\n     \r\n        this.setState({\r\n            searchText: val\r\n        });\r\n        TMDBsearch(5).then(allMoviesResults => \r\n            {\r\n                this.setState(\r\n                {\r\n                    movieArray: allMoviesResults,\r\n                })\r\n            }\r\n        )\r\n    }\r\n    openSearchPage = () => {\r\n        \r\n        window.location.href = `#/search-page/${this.state.searchText}`\r\n        this.setState(\r\n            {\r\n                searchText: '',\r\n                movieArray: []\r\n            }\r\n        )\r\n        \r\n    }\r\n    render() {\r\n        const searchResults = this.state.movieArray.filter((obj) => { return obj.title.toUpperCase().includes(this.state.searchText.toUpperCase()); }).map((dataItem, index) => {\r\n            return  <ListGroup.Item  \r\n            className={this.state.searchText === '' ? \"display-none\" : null}\r\n             action\r\n             key={index}\r\n             onChange={()=> {dataItem.toUpperCase().includes(this.state.searchText.toUpperCase())}}\r\n              onClick= {() => this.chooseMovie(dataItem.id)}\r\n             >\r\n             <div className=\"search-box-info\">\r\n            <div>\r\n            <img className=\"search-box-image\" src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${dataItem.poster_path}`}/>\r\n            </div>\r\n            <div>\r\n            <p>{dataItem.original_title}</p>\r\n            </div>\r\n            </div>\r\n            </ListGroup.Item>\r\n\r\n        });\r\n\r\n        return (\r\n            <div>\r\n            <div className=\"search-box\">                                                        \r\n            <Form.Control className=\"form-control\" onChange={this.updateText} value={this.state.searchText} placeholder={\"Please Enter Your Query\"}/>\r\n            <Button onClick= { this.openSearchPage}className=\"search-btn\">Search</Button>\r\n            </div>\r\n            <ListGroup  className=\"search-listgroup\">                                                                     \r\n                {searchResults}\r\n            </ListGroup>   \r\n          </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(SearchBox);","import React from 'react'\r\nimport { Nav, Navbar, Button, Form} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './components.css'\r\nimport { TMDBsearch } from '../utils';\r\nimport Searchpage from './SearchBox';\r\nimport SearchBox from './SearchBox';\r\n\r\nclass MainNavbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchText: \"\",\r\n        }\r\n    }\r\n\r\n    updateText = (event) =>{\r\n        const val = event.target.value;\r\n        // Update the internal state\r\n        this.setState({\r\n            searchText: val\r\n        });\r\n        TMDBsearch(5).then(allMoviesResults => \r\n            {\r\n                // debugger;\r\n                this.setState(\r\n                {\r\n                    movieArray: allMoviesResults,\r\n                })\r\n            }\r\n        )\r\n\r\n        // update the parent component \r\n        // this.props.onSearchChanged(val);\r\n    }\r\n\r\n\r\n    goToSearchPage = () =>{\r\n        const searchText = this.state.searchText;\r\n        \r\n        //pass to search page\r\n    } \r\n\r\n    render(){\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand className=\"d-flex \" href=\"/#/\">\r\n                    <div className=\"logo-img\">\r\n                        <img src=\"https://i.pinimg.com/originals/5f/8a/85/5f8a85054562d812b4f3ed841d720550.png\"/>\r\n                    </div> \r\n                    Disney Movies\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavLink className=\"nav-bar\" to=\"/new\">Newest</NavLink>\r\n                        <NavLink className=\"nav-bar\" to=\"/best\">Best movies</NavLink>\r\n                        <NavLink to=\"/advanced-search\"> Advanced Search</NavLink>\r\n                    </Nav>\r\n                    <Nav className=\"right\">\r\n                        <SearchBox >\r\n                        </SearchBox>\r\n                     \r\n                        {/* <Form.Control onChange={this.updateText} value={this.state.searchText} placeholder={\"Please enter your query\"}/> */}\r\n                        {/* <Button onClick={this.goToSearchPage}>Search</Button> */}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar> \r\n        )\r\n    }\r\n}\r\n\r\nexport default MainNavbar;\r\n","import React from 'react';\r\nimport { Card, ListGroup, Button, Form, Row, Container, Col  } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { TMDBDiscover, TMDBsearch } from '../utils';\r\n\r\n\r\n\r\nclass SearchPage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            searchText:'',\r\n            movieArray: [],\r\n        };\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        TMDBsearch(5).then(allMoviesResults => \r\n            {\r\n            \r\n                this.setState(\r\n                {\r\n                    movieArray: allMoviesResults,\r\n                })\r\n            }\r\n        )\r\n     }\r\n\r\n    render() {\r\n        let searchText = this.props.match.params.text\r\n  \r\n        const searchResultsCards = this.state.movieArray.filter((obj) => { \r\n            return    obj.original_title.toUpperCase().includes(searchText.toUpperCase()); })\r\n            .map((dataItem, index) => {\r\n            return(\r\n        <Col>\r\n        <Card style={{ width: '9rem', borderRadius: '11px' }}>\r\n          <Link to={`/movies/${dataItem.id}`}><Card.Img style={{ width: '9rem', borderRadius: '11px' }} variant=\"top\" src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${dataItem.poster_path}`}/></Link>\r\n            <Card.Body>\r\n                <Card.Title>{dataItem.original_title}</Card.Title>\r\n                <Card.Text>\r\n                   Click on the picture for more details \r\n                </Card.Text>\r\n          </Card.Body>\r\n      </Card>\r\n      </Col>\r\n            )\r\n              });\r\n        return (\r\n            <div className=\"search-page\">  \r\n            <h1 className=\"search-header\">Search Results</h1>\r\n            <Container>                                                      \r\n             <Row>                                                                  \r\n                {searchResultsCards}\r\n             </Row>\r\n             </Container>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(SearchPage);","import React from 'react'\r\nimport { Button, Col, Container, Form } from 'react-bootstrap';\r\nimport { TMDBsearch } from '../utils';\r\nimport './pages.css'\r\n\r\nclass AdvancedSearch extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            moviesArr: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = (pageNum) => {\r\n        TMDBsearch({page:pageNum})\r\n        .then(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                moviesArr: res\r\n            })\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Form className=\"mt-4\">\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Control as=\"select\" defaultValue=\"From Year\">\r\n                                <option>From Year</option>\r\n                                <option>...</option>\r\n                            </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Control as=\"select\" defaultValue=\"To Year\">\r\n                                <option>To Year</option>\r\n                                <option>...</option>\r\n                            </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Control as=\"select\" defaultValue=\"Genere\">\r\n                                <option>Genere</option>\r\n                                <option>...</option>\r\n                            </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Control as=\"select\" defaultValue=\"Min Rating\">\r\n                                <option>Min Rating</option>\r\n                                <option>...</option>\r\n                            </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Control as=\"select\" defaultValue=\"Min Votes\">\r\n                                <option>Min Votes</option>\r\n                                <option>...</option>\r\n                            </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                        <Button className=\"advanced-search-btn\" variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdvancedSearch;","import { HashRouter, Route } from 'react-router-dom'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Movies from './Pages/Movies';\r\nimport Homepage from './Pages/Homepage';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DetailsPage from './Pages/DetailsPage';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport MainNavbar from './Components/Navbar-main';\r\nimport SearchPage from './Pages/Searchpage';\r\nimport AdvancedSearch from './Pages/AdvancedSearch';\r\nimport React from 'react';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      isLoading:true\r\n    }\r\n  }\r\n  isLoading=()=>{\r\n\r\n  }\r\n\r\n  render(){\r\n  return (\r\n    <div>\r\n\r\n     <HashRouter>\r\n        <MainNavbar></MainNavbar>\r\n        <Route exact path=\"/movies/:movieId\">\r\n          <DetailsPage></DetailsPage>\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Homepage/>\r\n        </Route>\r\n        <Route exact path=\"/new\">\r\n\r\n          <Movies \r\n          showPaginator={true}\r\n          showSort={false}\r\n          galleryTitle='New movies'\r\n          sortByDefault='release_date.desc'/>\r\n        </Route>\r\n        <Route exact path=\"/best\">\r\n          <Movies \r\n          showPaginator={true}\r\n          showSort={false}\r\n          galleryTitle='Best movies'\r\n          sortByDefault='vote_average.desc'/>\r\n        </Route>\r\n        <Route exact path=\"/advanced-search\">\r\n          <AdvancedSearch/>\r\n        </Route>\r\n        <Route exact path=\"/search-page/:text\">\r\n          <SearchPage></SearchPage>\r\n        </Route>\r\n\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Carosale from './carosale/Carosale';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n<App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}